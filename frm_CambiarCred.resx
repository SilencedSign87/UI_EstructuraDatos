<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wcUYs4GlyaJ9AAAAABJRU5ErkJggg==
</value>
  </data>
</root>