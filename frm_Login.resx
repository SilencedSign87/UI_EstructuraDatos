<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>